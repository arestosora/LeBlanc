generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  discordId String   @unique
  username  String
  email     String   @unique
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id           Int            @id @default(autoincrement())
  name         String
  description  String
  price        Float
  stock        Int
  orders       Order[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  OrderProduct OrderProduct[]
}

model Order {
  id          Int            @id @default(autoincrement())
  userId      Int
  user        User           @relation(fields: [userId], references: [id])
  products    OrderProduct[]
  totalAmount Float
  status      OrderStatus    @default(PENDING)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  Product     Product?       @relation(fields: [productId], references: [id])
  productId   Int?
  Transaction Transaction[]
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}

model OrderProduct {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}
  
model Transaction {
  id        Int               @id @default(autoincrement())
  orderId   Int
  order     Order             @relation(fields: [orderId], references: [id])
  amount    Float
  status    TransactionStatus @default(PENDING)
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
}

enum TransactionStatus {
  PENDING
  SUCCESS
  FAILED
}
